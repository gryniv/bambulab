#!/bin/bash

# ===================== üåç Multilang =====================
declare -A TEXT_UK=(
    [select_file_info]="üîî –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤—ñ–∫–Ω–æ –≤–∏–±–æ—Ä—É —Ñ–∞–π–ª—É..."
    [select_file]="–û–±–µ—Ä—ñ—Ç—å .3mf –∞—Ä—Ö—ñ–≤"
    [no_file_selected]="‚ùóÔ∏è –§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ –∞–±–æ –¥—ñ—è —Å–∫–∞—Å–æ–≤–∞–Ω–∞."
    [not_found]="‚ùóÔ∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤ plate_*.gcode"
    [plates_found]="—Å—Ç–æ–ª–∞(—ñ–≤)-–∑–Ω–∞–π–¥–µ–Ω–æ:"
    [no_signature]="‚ùóÔ∏è –£ —Ñ–∞–π–ª—ñ %s –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ –ø—ñ–¥–ø–∏—Å—É ¬´ \xabMade by FactorianDesigns¬ª \xabMade by FactorianDesigns\xbb.\n‚õîÔ∏è –î–∞–Ω–∏–π G-code, –π–º–æ–≤—ñ—Ä–Ω–æ, –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —ñ–∑ —à–∞–±–ª–æ–Ω—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó.\nüîß –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–ª–∞–π—Å–µ—Ä–∞ –∞–±–æ –ø—Ä–æ—Ñ—ñ–ª—å –µ–∫—Å–ø–æ—Ä—Ç—É."
    [merge_question]="‚ùì –°–∫–æ–º–±—ñ–Ω—É–≤–∞—Ç–∏ –≤—Å—ñ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª plate_1.gcode? (y/N): "
    [enter_temp]="üõ†Ô∏è –Ø–∫—É –≤–∏—Å—Ç–∞–≤–∏—Ç–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É —Å—Ç–æ–ª–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∏–¥–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—ñ? (Enter –¥–ª—è 25¬∞C): "
    [merge_start]="‚û°Ô∏è –û–±'—î–¥–Ω–∞–Ω–Ω—è —É plate_1.gcode"
    [copy_prompt]="üìù –°–∫—ñ–ª—å–∫–∏ –∫–æ–ø—ñ–π –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–¥—Ä—É–∫—É–≤–∞—Ç–∏ –∑ %s? (Enter –¥–ª—è 1): "
    [copy_prompt_sep]="üìù –°–∫—ñ–ª—å–∫–∏ –∫–æ–ø—ñ–π –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–¥—Ä—É–∫—É–≤–∞—Ç–∏ –¥–ª—è %s? (Enter –¥–ª—è 1): "
    [copy_done]="‚úÖ –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
    [merge_done]="‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ plate_1.gcode. –Ü–Ω—à—ñ plate-—Ñ–∞–π–ª–∏ –≤–∏–¥–∞–ª–µ–Ω–æ."
    [process_each]="‚û°Ô∏è –û–±—Ä–æ–±–∫–∞ –∫–æ–∂–Ω–æ–≥–æ plate-—Ñ–∞–π–ª—É –æ–∫—Ä–µ–º–æ"
    [summary_title]="============================== –ü–Ü–î–°–£–ú–ö–ò =============================="
    [summary_saved]="üì¶ –ó–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫: %s"
    [summary_temp]="‚ô®Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–æ–ª–∞ –ø—ñ–¥ —á–∞—Å —Å–∫–∏–¥–∞–Ω–Ω—è: %s ¬∞C"
    [summary_format]="üìã –§–æ—Ä–º–∞—Ç –¥—Ä—É–∫—É: %s"
    [summary_total]="‚öñÔ∏è  –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞–≥–∞: %s –≥"
    [summary_size]="üìè –†–æ–∑–º—ñ—Ä –∞—Ä—Ö—ñ–≤—É: %s"
    [summary_end]="====================================================================="
    [print_mode_merged]="–û–±'—î–¥–Ω–∞–Ω–æ –≤ –æ–¥–∏–Ω —Å—Ç—ñ–ª"
    [print_mode_separated]="–†–æ–∑–¥—ñ–ª—å–Ω–∏–π –¥—Ä—É–∫ –ø–æ —Å—Ç–æ–ª–∞—Ö"
)

declare -A TEXT_EN=(
    [select_file_info]="üîî Press Enter to open the file selection window..."
    [lang_detected]="üåç System language detected: English (en)"
    [lang_prompt]="üîß Choose interface language (uk/en) [Enter = %s]: "
    [lang_fallback]="üåç Language not detected. Defaulting to: Ukrainian (uk)"
    [select_file]="Select a .3mf archive"
    [no_file_selected]="‚ùå No file selected or action canceled."
    [not_found]="‚ùå No plate_*.gcode files found"
    [plates_found]="plate(s)-found:"
    [no_signature]="‚ùå File %s is missing the signature 'Made by FactorianDesigns'.\n‚õîÔ∏è This G-code may not be generated from an automation template.\nüîß Please check slicer settings or export profile."
    [merge_question]="‚ùì Merge all into plate_1.gcode? (y/N): "
    [enter_temp]="üõ†Ô∏è Set bed temp for auto-release (Enter for 25¬∞C): "
    [merge_start]="‚û°Ô∏è Merging into plate_1.gcode"
    [copy_prompt]="üìù How many copies to print from %s? (Enter for 1): "
    [copy_prompt_sep]="üìù How many copies to print for %s? (Enter for 1): "
    [copy_done]="‚úÖ Copying completed."
    [merge_done]="‚úÖ plate_1.gcode created. Other plate files removed."
    [process_each]="‚û°Ô∏è Processing each plate file separately"
    [summary_title]="============================== SUMMARY =============================="
    [summary_saved]="üì¶ Saved as: %s"
    [summary_temp]="‚ô®Ô∏è  Bed temperature for release: %s ¬∞C"
    [summary_format]="üìã Print format: %s"
    [summary_total]="‚öñÔ∏è  Total filament weight: %s g"
    [summary_size]="üìè Archive size: %s"
    [summary_end]="====================================================================="
    [print_mode_merged]="Merged into one plate"
    [print_mode_separated]="Separate printing per plate"
)

# ===================== üì¶ Lang Choose =====================
DEFAULT_LANG=${LANG%%.*}
DEFAULT_CODE=${DEFAULT_LANG:0:2}

if [[ "$DEFAULT_CODE" == "uk" ]]; then
    SUGGESTED_LANG="uk"
    declare -n TEXT=TEXT_UK
    echo "${TEXT[lang_detected]}"
elif [[ "$DEFAULT_CODE" == "en" ]]; then
    SUGGESTED_LANG="en"
    declare -n TEXT=TEXT_EN
    echo "${TEXT[lang_detected]}"
else
    SUGGESTED_LANG="en"
    declare -n TEXT=TEXT_EN
    echo "${TEXT[lang_fallback]}"
fi

read -p "$(printf "${TEXT[lang_prompt]}" "$SUGGESTED_LANG")" USER_INPUT
LANG_CODE=${USER_INPUT,,}
LANG_CODE=${LANG_CODE:-$SUGGESTED_LANG}
[[ "$LANG_CODE" != "uk" && "$LANG_CODE" != "en" ]] && LANG_CODE="uk"

declare -n TEXT_REF=TEXT_${LANG_CODE^^}

get_text() {
    local key=$1
    echo "${TEXT_REF[$key]}"
}



# ===================== üì¶ Main Script =====================

REQUIRED_TOOLS=("zenity" "unzip" "zip" "sed")
for TOOL in "${REQUIRED_TOOLS[@]}"; do
    if ! command -v "$TOOL" &> /dev/null; then
        echo "‚ùå Missing: $TOOL"
        echo "   Install with: sudo apt install $TOOL"
        exit 1
    fi
done
read -p "$(get_text select_file_info)" 

ARCHIVE_PATH=$(zenity --file-selection --title="$(get_text select_file)" --file-filter="*.3mf")
[[ -z "$ARCHIVE_PATH" ]] && { echo "$(get_text no_file_selected)"; exit 1; }

BASENAME=$(basename -- "$ARCHIVE_PATH")ys
NAME="${BASENAME%.gcode.3mf}"
ARCHIVE_DIR=$(dirname "$ARCHIVE_PATH")
TMP_DIR=$(mktemp -d)

unzip -q "$ARCHIVE_PATH" -d "$TMP_DIR"

PLATE_DIR="$TMP_DIR/Metadata"
mapfile -t PLATES < <(find "$PLATE_DIR" -type f -name "plate_*.gcode" | sort)
[[ ${#PLATES[@]} -eq 0 ]] && { echo "$(get_text not_found)"; rm -rf "$TMP_DIR"; exit 2; }

for PLATE in "${PLATES[@]}"; do
    if ! grep -q "Made by FactorianDesigns" "$PLATE"; then
        printf "$(get_text no_signature)\n" "$(basename "$PLATE")"
        rm -rf "$TMP_DIR"
        exit 3
    fi
done

echo "üîç ${#PLATES[@]} $(get_text plates_found)"
for p in "${PLATES[@]}"; do echo " - $(basename "$p")"; done

read -p "$(get_text merge_question)" MERGE_ANSWER
read -p "$(get_text enter_temp)" DROP_TEMP
DROP_TEMP=${DROP_TEMP:-25}
TARGET_TEMP=$((DROP_TEMP - 4))

MERGE_INFO=()
WEIGHT_INFO=()
TOTAL_WEIGHT=0

if [[ "$MERGE_ANSWER" == "y" ]]; then
    echo "$(get_text merge_start)"
    BUFFER_FILE="$PLATE_DIR/merged.tmp.gcode"
    > "$BUFFER_FILE"
    echo "; === AUTO-MERGED ===" >> "$BUFFER_FILE"

    for ((i = 0; i < ${#PLATES[@]}; i++)); do
        SRC="${PLATES[$i]}"
        INDEX=$((i + 1))
        BASENAME_SRC=$(basename "$SRC")

        printf "$(get_text copy_prompt)" "$BASENAME_SRC"
        read REPEAT
        REPEAT=${REPEAT:-1}

        echo "; === PLATE $INDEX ($REPEAT copies) ===" >> "$BUFFER_FILE"
        RAW_WEIGHT=$(grep -iE 'filament weight.*[0-9]' "$SRC" | grep -Eo '[0-9]+[.,][0-9]+' | sed 's/,/./' | head -n1)
        WEIGHT_PER_COPY=${RAW_WEIGHT:-0}
        WEIGHT_TOTAL=$(awk "BEGIN { printf \"%.2f\", $WEIGHT_PER_COPY * $REPEAT }")
        TOTAL_WEIGHT=$(awk "BEGIN { printf \"%.2f\", $TOTAL_WEIGHT + $WEIGHT_TOTAL }")
        WEIGHT_INFO+=("üß© Plate $INDEX ‚Äì $REPEAT √ó ${WEIGHT_PER_COPY}g = ${WEIGHT_TOTAL}g")

        CONTENT=$(grep -q "M190 S22" "$SRC" && sed "s/M190 S22/M190 S$TARGET_TEMP/g" "$SRC" || cat "$SRC")
        for ((j = 1; j <= REPEAT; j++)); do
            PROGRESS=$((j * 100 / REPEAT))
            FILLED=$((PROGRESS / 5))
            EMPTY=$((20 - FILLED))
            BAR=$(printf "%0.s‚ñà" $(seq 1 $FILLED))$(printf "%0.s‚ñë" $(seq 1 $EMPTY))
            echo -ne "\r   ‚û§ $j/$REPEAT [$BAR]"
            echo "$CONTENT" >> "$BUFFER_FILE"
        done
        echo ""
        MERGE_INFO+=("${INDEX}-${REPEAT}")
    done

    mv "$BUFFER_FILE" "$PLATE_DIR/plate_1.gcode"
    find "$PLATE_DIR" -type f -name "plate_*.gcode" ! -name "plate_1.gcode" -delete
    echo "$(get_text merge_done)"
else
    echo "$(get_text process_each)"
    for PLATE in "${PLATES[@]}"; do
        BASENAME_PLATE=$(basename "$PLATE")
        INDEX=$(echo "$BASENAME_PLATE" | grep -oP 'plate_\K[0-9]+')

        printf "$(get_text copy_prompt_sep)" "$BASENAME_PLATE"
        read REPEAT
        REPEAT=${REPEAT:-1}
        ORIGINAL="$PLATE"

        if grep -q "M190 S22" "$PLATE"; then
            sed "s/M190 S22/M190 S$TARGET_TEMP/g" "$PLATE" > "$PLATE.tmp" && mv "$PLATE.tmp" "$PLATE"
        fi

        CONTENT=$(cat "$PLATE")
        COPIES=$((REPEAT - 1))
        for ((j = 1; j <= COPIES; j++)); do
            PROGRESS=$((j * 100 / COPIES))
            FILLED=$((PROGRESS / 5))
            EMPTY=$((20 - FILLED))
            BAR=$(printf "%0.s‚ñà" $(seq 1 $FILLED))$(printf "%0.s‚ñë" $(seq 1 $EMPTY))
            echo -ne "\r   ‚û§ $j/$COPIES [$BAR]"
            echo "$CONTENT" >> "$PLATE"
        done
        echo ""

        MERGE_INFO+=("${INDEX}-${REPEAT}")

        RAW_WEIGHT=$(grep -iE 'filament weight.*[0-9]' "$ORIGINAL" | grep -Eo '[0-9]+[.,][0-9]+' | sed 's/,/./' | head -n1)
        WEIGHT_PER_COPY=${RAW_WEIGHT:-0}
        WEIGHT_TOTAL=$(awk "BEGIN { printf \"%.2f\", $WEIGHT_PER_COPY * $REPEAT }")
        TOTAL_WEIGHT=$(awk "BEGIN { printf \"%.2f\", $TOTAL_WEIGHT + $WEIGHT_TOTAL }")
        WEIGHT_INFO+=("üß© Plate $INDEX ‚Äì $REPEAT √ó ${WEIGHT_PER_COPY}g = ${WEIGHT_TOTAL}g")
    done
    echo "$(get_text copy_done)"
fi

MERGE_TAG=$(IFS=_; echo "${MERGE_INFO[*]}")
OUTPUT_ARCHIVE="${ARCHIVE_DIR}/${NAME}_automated"
[[ "$MERGE_ANSWER" == "y" ]] && OUTPUT_ARCHIVE+="_merged"
OUTPUT_ARCHIVE+="(${MERGE_TAG}).gcode.3mf"

cd "$TMP_DIR" && zip -rq "$OUTPUT_ARCHIVE" ./* && cd -
rm -rf "$TMP_DIR"
ARCHIVE_SIZE=$(du -h "$OUTPUT_ARCHIVE" | cut -f1)
FORMAT=$(get_text print_mode_separated)
[[ "$MERGE_ANSWER" == "y" ]] && FORMAT=$(get_text print_mode_merged)

echo -e "\n\033[1;32m$(get_text summary_title)\033[0m"
printf "$(get_text summary_saved)\n" "$OUTPUT_ARCHIVE"
printf "$(get_text summary_temp)\n" "$DROP_TEMP"
printf "$(get_text summary_format)\n" "$FORMAT"
printf '%s\n' "${WEIGHT_INFO[@]}"
printf "$(get_text summary_total)\n" "$TOTAL_WEIGHT"
printf "$(get_text summary_size)\n" "$ARCHIVE_SIZE"
echo -e "\033[1;32m$(get_text summary_end)\033[0m"
